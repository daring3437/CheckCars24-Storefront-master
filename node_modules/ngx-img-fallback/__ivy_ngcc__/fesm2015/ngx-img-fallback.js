import { __decorate, __metadata } from 'tslib';
import { EventEmitter, Input, Output, Directive, ElementRef, Renderer2, NgModule } from '@angular/core';

import * as ɵngcc0 from '@angular/core';
let ImgFallbackDirective = class ImgFallbackDirective {
    constructor(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.loaded = new EventEmitter();
        this.isApplied = false;
        this.ERROR_EVENT_TYPE = 'error';
        this.LOAD_EVENT_TYPE = 'load';
        this.nativeElement = el.nativeElement;
        this.onError = this.onError.bind(this);
        this.onLoad = this.onLoad.bind(this);
        this.addEvents();
    }
    ngOnDestroy() {
        this.removeErrorEvent();
        this.removeOnLoadEvent();
    }
    onError() {
        if (this.nativeElement.getAttribute('src') !== this.imgSrc) {
            this.isApplied = true;
            this.renderer.setAttribute(this.nativeElement, 'src', this.imgSrc);
        }
        else {
            this.removeOnLoadEvent();
        }
    }
    onLoad() {
        this.loaded.emit(this.isApplied);
    }
    removeErrorEvent() {
        if (this.cancelOnError) {
            this.cancelOnError();
        }
    }
    removeOnLoadEvent() {
        if (this.cancelOnLoad) {
            this.cancelOnLoad();
        }
    }
    addEvents() {
        this.cancelOnError = this.renderer.listen(this.nativeElement, this.ERROR_EVENT_TYPE, this.onError);
        this.cancelOnLoad = this.renderer.listen(this.nativeElement, this.LOAD_EVENT_TYPE, this.onLoad);
    }
};
ImgFallbackDirective.ɵfac = function ImgFallbackDirective_Factory(t) { return new (t || ImgFallbackDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
ImgFallbackDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ImgFallbackDirective, selectors: [["", "src-fallback", ""]], inputs: { imgSrc: ["src-fallback", "imgSrc"] }, outputs: { loaded: "loaded" } });
__decorate([
    Input('src-fallback'),
    __metadata("design:type", String)
], ImgFallbackDirective.prototype, "imgSrc", void 0);
__decorate([
    Output('loaded'),
    __metadata("design:type", Object)
], ImgFallbackDirective.prototype, "loaded", void 0);
ImgFallbackDirective = __decorate([ __metadata("design:paramtypes", [ElementRef, Renderer2])
], ImgFallbackDirective);

let ImgFallbackModule = class ImgFallbackModule {
};
ImgFallbackModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ImgFallbackModule });
ImgFallbackModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ImgFallbackModule_Factory(t) { return new (t || ImgFallbackModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ImgFallbackDirective, [{
        type: Directive,
        args: [{
                selector: '[src-fallback]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { loaded: [{
            type: Output,
            args: ['loaded']
        }], imgSrc: [{
            type: Input,
            args: ['src-fallback']
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ImgFallbackModule, { declarations: [ImgFallbackDirective], exports: [ImgFallbackDirective] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ImgFallbackModule, [{
        type: NgModule,
        args: [{
                declarations: [ImgFallbackDirective],
                exports: [ImgFallbackDirective]
            }]
    }], null, null); })();

/**
 * Created by Vadym Yatsyuk on 28.01.18
 */

/**
 * Created by Vadym Yatsyuk on 28.01.18
 */

/**
 * Generated bundle index. Do not edit.
 */

export { ImgFallbackDirective, ImgFallbackModule };

//# sourceMappingURL=ngx-img-fallback.js.map